{"version":3,"file":"static/js/844.4db05410.chunk.js","mappings":"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","sources":["components/movieReviews/index.js","util.js","components/movieDetails/index.js","pages/movieDetailsPage.js"],"sourcesContent":["import React, { useEffect, useState }  from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/tmdb-api\";\r\nimport { excerpt } from \"../../util\";\r\n\r\nexport default function MovieReviews({ movie }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movie.id).then((reviews) => {\r\n      setReviews(reviews);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{minWidth: 550}} aria-label=\"reviews table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell >Author</TableCell>\r\n            <TableCell align=\"center\">Excerpt</TableCell>\r\n            <TableCell align=\"right\">More</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {reviews.map((r) => (\r\n            <TableRow key={r.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {r.author}\r\n              </TableCell>\r\n              <TableCell >{excerpt(r.content)}</TableCell>\r\n              <TableCell >\r\n              <Link\r\n                  to={`/reviews/${r.id}`}\r\n                  state={{\r\n                      review: r,\r\n                      movie: movie,\r\n                  }}\r\n                >\r\n                  Full Review\r\n                </Link>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import truncate from \"lodash/truncate\";\r\n\r\nexport function excerpt(string) {\r\n  return truncate(string, {    \r\n    length: 400, // maximum 400 characters\r\n    separator: /,?\\.* +/, // separate by spaces, including preceding commas and periods\r\n  });\r\n}","import React, { useState } from \"react\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport MonetizationIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport StarRate from \"@mui/icons-material/StarRate\";\r\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport MovieReviews from \"../movieReviews\"\r\n\r\n\r\nconst root = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: 1.5,\r\n    margin: 0,\r\n};\r\nconst chip = { margin: 0.5 };\r\n\r\nconst MovieDetails = ({ movie }) => {  // Don't miss this!\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" component=\"h3\">\r\n        Overview\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        {movie.overview}\r\n      </Typography>\r\n\r\n      <Paper \r\n        component=\"ul\" \r\n        sx={{...root}}\r\n      >\r\n        <li>\r\n          <Chip label=\"Genres\" sx={{...chip}} color=\"primary\" />\r\n        </li>\r\n        {movie.genres.map((g) => (\r\n          <li key={g.name}>\r\n            <Chip label={g.name} sx={{...chip}} />\r\n          </li>\r\n        ))}\r\n      </Paper>\r\n      <Paper component=\"ul\" sx={{...root}}>\r\n        <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\r\n        <Chip\r\n          icon={<MonetizationIcon />}\r\n          label={`${movie.revenue.toLocaleString()}`}\r\n        />\r\n        <Chip\r\n          icon={<StarRate />}\r\n          label={`${movie.vote_average} (${movie.vote_count}`}\r\n        />\r\n        <Chip label={`Released: ${movie.release_date}`} />\r\n      </Paper>\r\n\r\n      <Paper component=\"ul\" sx={{...root}}>\r\n      <li>\r\n          <Chip label=\"Production Countries\" sx={{...chip}} color=\"primary\" />\r\n        </li>\r\n        {movie.production_countries.map((prodCountry) => (\r\n          <li key ={prodCountry.name}>\r\n          <Chip label={prodCountry.name} sx={{...chip}}/>\r\n          </li>\r\n        ))}\r\n      </Paper>\r\n\r\n      <Fab\r\n        color=\"secondary\"\r\n        variant=\"extended\"\r\n        onClick={() =>setDrawerOpen(true)}\r\n        sx={{\r\n          position: 'fixed',\r\n          bottom: '1em',\r\n          right: '1em'\r\n        }}\r\n      >\r\n        <NavigationIcon />\r\n        Reviews\r\n      </Fab>\r\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n        <MovieReviews movie={movie} />\r\n      </Drawer>\r\n      </>\r\n  );\r\n};\r\nexport default MovieDetails ;","import React, { useState, useContext } from \"react\";\r\nimport AuthContext from \"../AuthContext\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport MovieDetails from \"../components/movieDetails/\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport { getMovie } from '../api/tmdb-api'\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../components/spinner'\r\nimport SiteHeader from './../components/siteHeader'\r\n\r\nconst MoviePage = (props) => {\r\n  const { id } = useParams();\r\n  const { data: movie, error, isLoading, isError } = useQuery(\r\n    [\"movie\", { id: id }],\r\n    getMovie\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <><SiteHeader />\r\n          <PageTemplate movie={movie}>\r\n            <MovieDetails movie={movie} />\r\n          </PageTemplate>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for movie details</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;"],"names":["MovieReviews","movie","useState","reviews","setReviews","useEffect","getMovieReviews","id","then","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","r","scope","author","string","content","truncate","length","separator","to","state","review","root","display","justifyContent","flexWrap","listStyle","padding","margin","chip","drawerOpen","setDrawerOpen","Typography","variant","overview","Chip","label","color","genres","g","name","icon","AccessTime","runtime","revenue","toLocaleString","StarRate","vote_average","vote_count","release_date","production_countries","prodCountry","Fab","onClick","position","bottom","right","Navigation","Drawer","anchor","open","onClose","props","useParams","useQuery","getMovie","data","error","isLoading","isError","message"],"sourceRoot":""}