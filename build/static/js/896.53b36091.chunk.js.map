{"version":3,"file":"static/js/896.53b36091.chunk.js","mappings":"8OAWMA,EAAO,CACTC,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACVC,UAAW,OACXC,QAAS,IACTC,OAAQ,GA6BZ,EAzBqB,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACtB,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAAlC,KAAe,KAEhC,OAEE,iCACJ,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAI,wBAIjC,SAACF,EAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,IAAG,SACnCJ,EAAMK,aAGT,UAACH,EAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,IAAG,wBACxBJ,EAAMM,yBAGd,UAACC,EAAA,EAAK,CAACH,UAAU,KAAKI,IAAE,UAAMf,GAAM,WACpC,SAACgB,EAAA,EAAI,CAACC,MAAK,uBAAkBV,EAAMW,mBACvC,SAACF,EAAA,EAAI,CAACC,MAAK,oBAAeV,EAAMY,iBAIxC,E,8BCRA,EA9BoB,SAACC,GACnB,IAAMb,EAAQa,EAAMb,MAEpB,OACE,UAACO,EAAA,EAAK,CACFH,UAAU,MACVI,GAAI,CACAd,QAAS,OACTC,eAAgB,eAChBC,SAAU,OACVE,QAAS,IACTC,OAAQ,GACV,WAEJ,SAACe,EAAA,EAAU,CAAC,aAAW,UAAS,UAC9B,SAACC,EAAA,EAAa,CAACC,MAAM,UAAUC,SAAS,aAG1C,UAACf,EAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAI,UACpCJ,EAAMkB,MACP,mBACA,iBAAMV,GAAI,CAAES,SAAU,gBAExB,SAACH,EAAA,EAAU,CAAC,aAAW,aAAY,UACjC,SAACK,EAAA,EAAgB,CAACH,MAAM,UAAUC,SAAS,cAInD,E,8BCIA,EAjC0B,SAAH,GAA6B,IAAvBjB,EAAK,EAALA,MAAOoB,EAAQ,EAARA,SAElC,OACE,iCACE,SAAC,EAAW,CAACpB,MAAOA,KAEpB,UAACqB,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGf,GAAI,CAAEV,QAAS,QAAS,WACpD,SAACuB,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACb,gBAAKjB,GAAI,CACPd,QAAS,OACTE,SAAU,OACVD,eAAgB,gBAChB,UACA,SAAC+B,EAAA,EAAS,CACNC,KAAM,EAAE,UACJ,SAACC,EAAA,EAAa,CAA0BD,KAAM,EAAE,UAChD,gBACIE,IAAG,0CAAqC7B,EAAM8B,cAC9CC,IAAK/B,EAAMgC,eAHKhC,EAAM8B,qBAUtC,SAACT,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE,SACdL,SAKX,E,wCCGA,EA9BkB,SAACP,GACjB,IAAQoB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAmDE,EAAAA,EAAAA,UACjD,CAAC,QAAS,CAAEF,GAAIA,IAChBG,EAAAA,IAFYpC,EAAK,EAAXqC,KAAaC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAKvC,OAAID,GACK,SAAC,IAAO,IAGbC,GACK,wBAAKF,EAAMG,WAIlB,8BACGzC,GACC,iCAAE,SAAC,IAAU,KACX,SAAC,EAAY,CAACA,MAAOA,EAAM,UACzB,SAAC,EAAY,CAACA,MAAOA,UAIzB,sDAIR,C","sources":["components/actorDetails/index.js","components/headerActor/index.js","components/templateActorPage/index.js","pages/actorDetailsPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport MonetizationIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport StarRate from \"@mui/icons-material/StarRate\";\r\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\n\r\nconst root = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    padding: 1.5,\r\n    margin: 0,\r\n};\r\nconst chip = { margin: 0.5 };\r\n\r\nconst ActorDetails = ({ actor }) => {  // Don't miss this!\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  return (\r\n\r\n    <>\r\n<Typography variant=\"h5\" component=\"h3\">\r\n        Biography\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        {actor.biography}\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" component=\"p\">\r\n        Known for: {actor.known_for_department}\r\n      </Typography>\r\n\r\n            <Paper component=\"ul\" sx={{...root}}>\r\n            <Chip label={`Birth Place: ${actor.place_of_birth}`} />\r\n        <Chip label={`Birthday: ${actor.birthday}`} />\r\n      </Paper>\r\n      </>\r\n  );\r\n};\r\nexport default ActorDetails ;","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst ActorHeader = (props) => {\r\n  const actor = props.actor;\r\n\r\n  return (\r\n    <Paper \r\n        component=\"div\" \r\n        sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n            padding: 1.5,\r\n            margin: 0,\r\n        }}\r\n      >\r\n      <IconButton aria-label=\"go back\">\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {actor.name}\r\n        <br />\r\n        <span sx={{ fontSize: \"1.5rem\" }}></span>\r\n      </Typography>\r\n      <IconButton aria-label=\"go forward\">\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ActorHeader;","import React, { useState, useEffect } from \"react\";\r\nimport ActorHeader from \"../headerActor\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst TemplateActorPage = ({ actor, children }) => {\r\n\r\n  return (\r\n    <>\r\n      <ActorHeader actor={actor} />\r\n\r\n      <Grid container spacing={5} sx={{ padding: \"15px\" }}>\r\n      <Grid item xs={3}>\r\n          <div sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n          }}>\r\n            <ImageList \r\n                cols={1}>\r\n                    <ImageListItem key={actor.profile_path} cols={1}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\r\n                        alt={actor.poster_path}\r\n                    />\r\n                    </ImageListItem>\r\n            </ImageList>\r\n          </div>\r\n        </Grid>\r\n  \r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateActorPage;","import React, { useState, useContext } from \"react\";\r\nimport AuthContext from \"../AuthContext\";\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport ActorDetails from \"../components/actorDetails\";\r\nimport PageTemplate from \"../components/templateActorPage\";\r\nimport { getActor } from '../api/tmdb-api'\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../components/spinner'\r\nimport SiteHeader from './../components/siteHeader'\r\n\r\nconst ActorPage = (props) => {\r\n  const { id } = useParams();\r\n  const { data: actor, error, isLoading, isError } = useQuery(\r\n    [\"actor\", { id: id }],\r\n    getActor\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {actor ? (\r\n        <><SiteHeader />\r\n          <PageTemplate actor={actor}>\r\n            <ActorDetails actor={actor} />\r\n          </PageTemplate>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for actor details</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActorPage;"],"names":["root","display","justifyContent","flexWrap","listStyle","padding","margin","actor","useState","Typography","variant","component","biography","known_for_department","Paper","sx","Chip","label","place_of_birth","birthday","props","IconButton","ArrowBack","color","fontSize","name","ArrowForward","children","Grid","container","spacing","item","xs","ImageList","cols","ImageListItem","src","profile_path","alt","poster_path","id","useParams","useQuery","getActor","data","error","isLoading","isError","message"],"sourceRoot":""}